# @gf3’s Sexy Bash Prompt, inspired by “Extravagant Zsh Prompt”
# Shamelessly copied from https://github.com/gf3/dotfiles

default_username='RicardoGaviria'

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
	export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
	export TERM=xterm-256color
fi

if tput setaf 1 &> /dev/null; then
	tput sgr0 # Reset Colors

	# Solarized colors
    # (https://github.com/altercation/solarized/tree/master/iterm2-colors-solarized#the-values)
	if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
		MAGENTA=$(tput setaf 9)
		ORANGE=$(tput setaf 172)
		GREEN=$(tput setaf 190)
		PURPLE=$(tput setaf 141)
		WHITE=$(tput setaf 255)
	else
		MAGENTA=$(tput setaf 5)
		ORANGE=$(tput setaf 4)
		GREEN=$(tput setaf 2)
		PURPLE=$(tput setaf 1)
		WHITE=$(tput setaf 7)
	fi
	BOLD=$(tput bold)
	RESET=$(tput sgr0)
else
	MAGENTA="\033[1;31m"
	ORANGE="\033[1;33m"
	GREEN="\033[1;32m"
	PURPLE="\033[1;35m"
	WHITE="\033[1;37m"
	BLACK="\e[1;30m"
    BLUE="\e[1;34m"
    CYAN="\e[1;36m"
    RED="\e[1;31m"
    VIOLET="\e[1;35m"
    YELLOW="\e[1;33m"
	
	BOLD=""
	RESET="\033[m"
fi


# function git_info() {
# 	# check if we're in a git repo (fast)
# 	git rev-parse --is-inside-work-tree &>/dev/null || return

# 	# quickest check for what branch we're on
# 	branch=$(git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||')

# 	# check if it's dirty (via github.com/sindresorhus/pure)
# 	dirty=$(git diff --quiet --ignore-submodules HEAD &>/dev/null; [ $? -eq 1 ]&& echo -e "*")

# 	echo $WHITE" on "$PURPLE$branch$dirty
# }

function hg_info() {
	# check if we're in a hg repo (fast)
	hg identify &> /dev/null || return

	# quickest check for what branch we're on
	branch=$(hg identify --branch)

	# check if it's dirty (via github.com/sindresorhus/pure)
	# dirty=$(git diff --quiet --ignore-submodules HEAD &>/dev/null; [ $? -eq 1 ]&& echo -e "*")

	echo $WHITE" on "$PURPLE$branch
}

# Only show username/host if not default
function usernamehost() {
	
	# Highlight the user name when logged in as root.
    if [[ $USER == *"root" ]]; then
        userStyle="${RED}";
    else
        userStyle="${MAGENTA}";
    fi;

    userhost=""
    userhost="\[${userStyle}\]$USER "
    userhost="${WHITE}at "
    userhost="${ORANGE}$HOSTNAME "
    userhost="$WHITEin "

	if [ $USER != "$default_username" ]; then
		echo $userhost;
	fi
}

# iTerm Tab and Title Customization and prompt customization
# http://sage.ucsc.edu/xtal/iterm_tab_customization.html

# Put the string " [bash]   hostname::/full/directory/path"
# in the title bar using the command sequence
# \[\e]2;[bash]   \h::\]$PWD\[\a\]

# Put the penultimate and current directory
# in the iterm tab
# \[\e]1;\]$(basename $(dirname $PWD))/\W\[\a\]

# ------------------------------------------------------------------
# | Prompt string                                                  |
# | ༼ つ ◕_◕ ༽つ⚡  ▶ ✄ ➜ ➞ ➙ ➨
# | http://www.cs.tut.fi/~jkorpela/fui.html8
# ------------------------------------------------------------------


PS1="\[\e]2;$PWD\[\a\]\[\e]1;\]"
PS1+="$(basename "$(dirname "$PWD")")/\W"
PS1+="\[\a\]${BOLD}"
PS1+="\$(usernamehost)"
PS1+="\[$GREEN\]\w"
PS1+="\$(hg_info)"
PS1+="\[$WHITE\]\n➜ " 
PS1+="\[$RESET\]"

# ------------------------------------------------------------------
# | Subshell prompt string                                         |
# ------------------------------------------------------------------

PS2="✈ "